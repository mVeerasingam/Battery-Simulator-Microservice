ToDo:
                Testing and Validation:
                -   Make tests to check if the payload has received/updated/sent to and from java respectively.
                -   Test if code can handle multiple simulation requests concurrently without blocking.
                -   Validate flask requests so that all parameters are required

                Simulations:
                    ------------------------[Simulation Model Options]------------------------------------------------------
                -   Option to simulate batteries at 0째/25째/75째. Default is 25째

                -   Option to simulate a discharge or charge of a battery. (Could just reverse the discharge? simple option)

                -   Option to simulate in different models ("BaseModel", "SPM", "DFN"etc...)
                    Could display "Simulate Model 1/2 etc..." on website (no need for major detail).

                -   [idea] With validation. Have the option to input either a nominal voltage or upper and lower voltage
                    as a customisable parameter. Lithium Ion's nominal voltage is ~ 3.6V to 3.7V.
                    Nominal Voltage = Upper Voltage CutOff + Lower Voltage CutOff / 2.
                    Most Li-On Battery datasheets show its nominal voltage. Having the above suggestion is good UX
                    Alternatively:
                        A simpler option is to let the user choose a nominal voltage option between 3.6V and 3.7V they wish
                        to model off of. These options just have the preset upper and lower voltages assigned to them.
                        This saves us trying to calc new upper and lower voltages.

                    --------------------------[Simulation Features]--------------------------------------------------------
                -   Handle multiple simulation requests concurrently without blocking.
                    Java Job Manager looks at the message queues sent from microservice 1.
                    If a message says that a simulation job is already running, it waits before pulling from message queue.
                    If a job is not running it tells this microservice to execute the next job (generate a new simulation)

                -   This is a job manager function but relevant. The project DB should have premade real life battery cells like LGM50 or Samsung-inr18650-25r
                    The simulator should be able to succesfully receive these values and send it back without causing any issues.

                    --------------------------------[Long-Term]------------------------------------------------------------
                -   Once a model is made, look at making a definition that simulates that models drive cycle
                    User could have option to simulate battery model and/or make drive cycle
                    By solving with a changing current like: https://tinyurl.com/2prwzrrh
                    It would allow a drive cycle simulation (different from the current time solved simulation).

                -   String based experiments

                -   Try implementing LiIonPack for lithium ion pack simulation